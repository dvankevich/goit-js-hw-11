{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import response from '../testdata/cats.json';\n\n/**\n *\n * @param {string} searchTerm\n * @returns JSON object\n */\nexport function getImages(searchTerm) {\n  //sleep(3000);\n  if (searchTerm === 'test') {\n    return '';\n  }\n  return response;\n}\n\n// emulate API delay. for test progress message.\n// https://www.sitepoint.com/delay-sleep-pause-wait/\nfunction sleep(milliseconds) {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}\n","function getItemMarkdown(item) {\n  // webformatURL — посилання на маленьке зображення для списку карток у галереї\n  // largeImageURL — посилання на велике зображення для модального вікна\n  // tags — рядок з описом зображення. Підійде для атрибута alt\n  // likes — кількість вподобайок\n  // views — кількість переглядів\n  // comments — кількість коментарів\n  // downloads — кількість завантажень\n  return `\n  <li class=\"gallery-item\">\n    <a href=\"${item.largeImageURL}\"\n      class=\"galery-item-image-link\">\n      <img class=\"galery-item-image\"\n        src=\"${item.webformatURL}\"\n        alt=\"${item.tags}\" />\n    </a>\n    <ul class=\"image-info\">\n      <li class=\"image-info-item\">\n        <p class=\"info-item-caption\">Likes</p>\n        <p class=\"info-item-value\">${item.likes}</p>\n      </li>\n      <li class=\"image-info-item\">\n        <p class=\"info-item-caption\">Views</p>\n        <p class=\"info-item-value\">${item.views}</p>\n\n      </li>\n      <li class=\"image-info-item\">\n        <p class=\"info-item-caption\">Comments</p>\n        <p class=\"info-item-value\">${item.comments}</p>\n      </li>\n      <li class=\"image-info-item\">\n        <p class=\"info-item-caption\">Downloads</p>\n        <p class=\"info-item-value\">${item.downloads}</p>\n      </li>\n    </ul>\n  </li>\n`;\n}\n\n/**\n *\n * @param {Array} images array\n * @returns HTML markdown for gallery\n */\nexport function getGalleryMarkdown(images) {\n  return images.map(getItemMarkdown).join('');\n}\n\n/**\n *\n * @param {Object} gallery gallery DOM object\n * @param {String} markdown HTML markdown for gallery\n */\nexport function drawGallery(gallery, markdown) {\n  gallery.innerHTML = markdown;\n}\n","import { getImages } from './js/pixabay-api';\nimport { getGalleryMarkdown, drawGallery } from './js/render-functions';\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst loadMessageMarkdown =\n  '<li class=\"load-message\">Loading images, please wait...</li>';\nconst myGallery = document.querySelector('.gallery');\nconst searchButton = document.querySelector('.search-button');\nconst searchInput = document.querySelector('.search-input');\n\nsearchButton.addEventListener('click', function (event) {\n  event.preventDefault();\n  let searchTerm = String(searchInput.value.trim());\n  searchTerm = searchTerm.replace(/[*]/g, ''); // видалення спецсимволів\n  let galleryMarkdown = '';\n  let images = '';\n  // console.log(searchTerm.length);\n\n  if (!searchTerm || searchTerm.length < 3) {\n    console.log('Enter data for search, please. Min. 3 symbols.');\n    searchInput.value = ''; // clear input\n    drawGallery(myGallery, ''); // clear gallery\n    return;\n  }\n\n  console.log(`fetch data from backend with search term: ${searchTerm}`);\n  drawGallery(myGallery, loadMessageMarkdown);\n\n  images = getImages(searchTerm);\n  // console.log(images);\n\n  if (!images) {\n    console.log(\n      'Sorry, there are no images matching your search query. Please, try again!'\n    );\n    searchInput.value = ''; // clear input\n    drawGallery(myGallery, ''); // clear gallery\n  } else {\n    searchInput.value = ''; // clear input\n    galleryMarkdown = getGalleryMarkdown(images.hits);\n    drawGallery(myGallery, galleryMarkdown);\n    new SimpleLightbox('.gallery a', {\n      captionsData: 'alt',\n      captionDelay: 250,\n      overlayOpacity: 0.8,\n    });\n  }\n});\n"],"names":["getImages","searchTerm","response","getItemMarkdown","item","getGalleryMarkdown","images","drawGallery","gallery","markdown","loadMessageMarkdown","myGallery","searchButton","searchInput","event","galleryMarkdown","SimpleLightbox"],"mappings":"sxjBAOO,SAASA,EAAUC,EAAY,CAEpC,OAAIA,IAAe,OACV,GAEFC,CACT,CCbA,SAASC,EAAgBC,EAAM,CAQ7B,MAAO;AAAA;AAAA,eAEMA,EAAK,aAAa;AAAA;AAAA;AAAA,eAGlBA,EAAK,YAAY;AAAA,eACjBA,EAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,qCAKaA,EAAK,KAAK;AAAA;AAAA;AAAA;AAAA,qCAIVA,EAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,qCAKVA,EAAK,QAAQ;AAAA;AAAA;AAAA;AAAA,qCAIbA,EAAK,SAAS;AAAA;AAAA;AAAA;AAAA,CAKnD,CAOO,SAASC,EAAmBC,EAAQ,CACzC,OAAOA,EAAO,IAAIH,CAAe,EAAE,KAAK,EAAE,CAC5C,CAOO,SAASI,EAAYC,EAASC,EAAU,CAC7CD,EAAQ,UAAYC,CACtB,CCjDA,MAAMC,EACJ,+DACIC,EAAY,SAAS,cAAc,UAAU,EAC7CC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAc,SAAS,cAAc,eAAe,EAE1DD,EAAa,iBAAiB,QAAS,SAAUE,EAAO,CACtDA,EAAM,eAAc,EACpB,IAAIb,EAAa,OAAOY,EAAY,MAAM,KAAM,CAAA,EAChDZ,EAAaA,EAAW,QAAQ,OAAQ,EAAE,EAC1C,IAAIc,EAAkB,GAClBT,EAAS,GAGb,GAAI,CAACL,GAAcA,EAAW,OAAS,EAAG,CACxC,QAAQ,IAAI,gDAAgD,EAC5DY,EAAY,MAAQ,GACpBN,EAAYI,EAAW,EAAE,EACzB,MACD,CAED,QAAQ,IAAI,6CAA6CV,CAAU,EAAE,EACrEM,EAAYI,EAAWD,CAAmB,EAE1CJ,EAASN,EAAUC,CAAU,EAGxBK,GAOHO,EAAY,MAAQ,GACpBE,EAAkBV,EAAmBC,EAAO,IAAI,EAChDC,EAAYI,EAAWI,CAAe,EACtC,IAAIC,EAAe,aAAc,CAC/B,aAAc,MACd,aAAc,IACd,eAAgB,EACtB,CAAK,IAbD,QAAQ,IACN,2EACN,EACIH,EAAY,MAAQ,GACpBN,EAAYI,EAAW,EAAE,EAW7B,CAAC"}